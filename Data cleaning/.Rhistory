library(readxl)
YoY_data <- read_excel("C:/Users/fengm/OneDrive - University of Calgary/WINTER25/data501/backup data and files for project/YoY data.xlsx")
View(YoY_data)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
# Preview the dataset
head(df)
# Convert REF_DATE to Date format
df$REF_DATE <- as.Date(paste0(df$REF_DATE, "-01"), format="%Y-%m-%d")
Yoy
read.csv(YOY)
yoy
YoY_data
# Convert REF_DATE to Date format
df$REF_DATE <- as.Date(paste0(df$REF_DATE, "-01"), format="%Y-%m-%d")
# Sort by date
df <- df %>% arrange(REF_DATE)
# Summary statistics
summary(df$VALUE)
# Compute mean, median, and standard deviation
mean_inflation <- mean(df$VALUE, na.rm = TRUE)
median_inflation <- median(df$VALUE, na.rm = TRUE)
sd_inflation <- sd(df$VALUE, na.rm = TRUE)
cat("Mean Inflation Rate:", mean_inflation, "\n")
cat("Median Inflation Rate:", median_inflation, "\n")
cat("Standard Deviation:", sd_inflation, "\n")
# Plot the inflation rate trend over time
ggplot(df, aes(x = REF_DATE, y = VALUE)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Year-over-Year Inflation Rate Trend",
x = "Year",
y = "Inflation Rate (%)") +
theme_minimal()
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Load the dataset
file_path <- "https://uofc-my.sharepoint.com/personal/manxuan_feng_ucalgary_ca/Documents/WINTER25/data501/backup%20data%20and%20files%20for%20project/YoY%20data.xlsx?web=1"
df <- read_excel(file_path)
# Load the dataset
df <- read_excel(YoY_data)
# Preview the dataset
head(df)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Load the dataset
df <- read_excel('YoY_data')
# Load the dataset
df <- YoY_data
# Preview the dataset
head(df)
# Convert REF_DATE to Date format
df$REF_DATE <- as.Date(paste0(df$REF_DATE, "-01"), format="%Y-%m-%d")
# Sort by date
df <- df %>% arrange(REF_DATE)
# Summary statistics
summary(df$VALUE)
# Compute mean, median, and standard deviation
mean_inflation <- mean(df$VALUE, na.rm = TRUE)
median_inflation <- median(df$VALUE, na.rm = TRUE)
sd_inflation <- sd(df$VALUE, na.rm = TRUE)
cat("Mean Inflation Rate:", mean_inflation, "\n")
cat("Median Inflation Rate:", median_inflation, "\n")
cat("Standard Deviation:", sd_inflation, "\n")
# Plot the inflation rate trend over time
ggplot(df, aes(x = REF_DATE, y = VALUE)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Year-over-Year Inflation Rate Trend",
x = "Year",
y = "Inflation Rate (%)") +
theme_minimal()
# Load the dataset
df <- "C:\Users\fengm\Downloads\YoY data.xlsx"
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Load the dataset
df <- "C:\Users\fengm\Downloads\YoY data.xlsx"
# Load the dataset
df <- " C:\Users\fengm\Downloads\YoY data.xlsx "
# Load the dataset
df <- " C:\Users\fengm\Downloads\YoY data.xlsx "
# Preview the dataset
df <- read_excel(file_path)
head(df)
# Load the dataset
file_path <- " C:\Users\fengm\Downloads\YoY data.xlsx "
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Load the dataset
file_path <- "C:\\Users\\fengm\\Downloads\\YoY data.xlsx"
# Preview the dataset
df <- read_excel(file_path)
head(df)
# Convert REF_DATE to Date format
df$REF_DATE <- as.Date(paste0(df$REF_DATE, "-01"), format="%Y-%m-%d")
# Convert REF_DATE to Date format
df$...1 <- as.Date(paste0(df$REF_DATE, "-01"), format="%Y-%m-%d")
# Sort by date
df <- df %>% arrange(REF_DATE)
# Summary statistics
summary(df$VALUE)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Define the correct file path
file_path <- "C:/Users/fengm/Downloads/YoY data.xlsx"  # Update if needed
# Load the dataset
df <- read_excel(file_path)
# Display first few rows
head(df)
# Ensure REF_DATE is in Date format (assuming "YYYY-MM")
df$REF_DATE <- as.Date(paste0(df$REF_DATE, "-01"), format="%Y-%m-%d")
# Ensure REF_DATE is in Date format (assuming "YYYY-MM")
df$Date <- as.Date(paste0(df$REF_DATE, "-01"), format="%Y-%m-%d")
# Sort data by date
df <- df %>% arrange(Date)
# Display summary statistics
summary(df$VALUE)
# Compute mean, median, and standard deviation
mean_inflation <- mean(df$VALUE, na.rm = TRUE)
median_inflation <- median(df$VALUE, na.rm = TRUE)
sd_inflation <- sd(df$VALUE, na.rm = TRUE)
cat("Mean Inflation Rate:", mean_inflation, "\n")
cat("Median Inflation Rate:", median_inflation, "\n")
cat("Standard Deviation:", sd_inflation, "\n")
# Plot inflation trend
ggplot(df, aes(x = REF_DATE, y = VALUE)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Year-over-Year Inflation Rate Trend",
x = "Year",
y = "Inflation Rate (%)") +
theme_minimal()
library(readxl)
YoY_data <- read_excel("C:/Users/fengm/Downloads/YoY data.xlsx")
View(YoY_data)
yoy <- YoY_data
head(yoy)
summary(yoy$`CPI-median`)
library(readxl)
cleaned_Diesel_fuel_at_self_service_filling_stations <- read_excel("C:/Users/fengm/OneDrive - University of Calgary/WINTER25/data501/backup data and files for project/cleaned Diesel fuel at self service filling stations.xlsx",
col_types = c("date", "text", "numeric"))
View(cleaned_Diesel_fuel_at_self_service_filling_stations)
library(readxl)
Diesel_fuel_at_self_service_filling_stations <- read_excel("C:/Users/fengm/OneDrive - University of Calgary/WINTER25/data501/backup data and files for project/Diesel fuel at self service filling stations.xlsx",
sheet = "all countries diesel price",
col_types = c("text", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text"))
View(Diesel_fuel_at_self_service_filling_stations)
fuel
fuel
fuel <- read.csv(Diesel_fuel_at_self_service_filling_stations)
fuel = Diesel_fuel_at_self_service_filling_stations
fuel
geo_stats <- df %>%
geo_stats <- fuel %>%
geo_stats <- fuel %>%
geo_stats <- fuel %>%
summarise(
mean_price = mean(VALUE, na.rm = TRUE),
median_price = median(VALUE, na.rm = TRUE),
sd_price = sd(VALUE, na.rm = TRUE)
)
print(geo_stats)
ggplot(df, aes(x = REF_DATE, y = VALUE, color = GEO)) +
geom_line() +
labs(title = "Diesel Price Trends by Country/Region",
x = "Year",
y = "Diesel Price") +
theme_minimal()
ggplot(fuel, aes(x = REF_DATE, y = VALUE, color = GEO)) +
geom_line() +
labs(title = "Diesel Price Trends by Country/Region",
x = "Year",
y = "Diesel Price") +
theme_minimal()
fuel = Diesel_fuel_at_self_service_filling_stations
fuel
canadian_cities <- c(
"St. John's, Newfoundland and Labrador",
"Charlottetown and Summerside, Prince Edward Island",
"Halifax, Nova Scotia",
"Saint John, New Brunswick",
"Québec, Quebec",
"Montréal, Quebec",
"Ottawa-Gatineau, Ontario part, Ontario/Quebec",
"Toronto, Ontario",
"Winnipeg, Manitoba",
"Regina, Saskatchewan",
"Saskatoon, Saskatchewan",
"Edmonton, Alberta",
"Calgary, Alberta",
"Vancouver, British Columbia",
"Victoria, British Columbia",
"Whitehorse, Yukon",
"Yellowknife, Northwest Territories"
)
fuel_canada <- fuel %>% filter(GEO %in% canadian_cities)
geo_stats <- fuel_canada %>%
group_by(GEO) %>%
summarise(
mean_price = mean(VALUE, na.rm = TRUE),
median_price = median(VALUE, na.rm = TRUE),
sd_price = sd(VALUE, na.rm = TRUE)
)
print(geo_stats)
ggplot(geo_stats, aes(x = reorder(GEO, mean_price), y = mean_price, fill = GEO)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal() +
theme(legend.position = "none")
print(geo_stats)
ggplot(geo_stats, aesx = reorder(GEO, mean_price), y = mean_price, fill = GEO)) +
# Plot median diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, median_price), y = median_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "darkgreen") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Median Diesel Price by Canadian City",
x = "City",
y = "Median Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
ggplot(geo_stats, aesx = reorder(GEO, mean_price), y = mean_price, fill = GEO)) +
ggplot(geo_stats, aesx = reorder(GEO, mean_price), y = mean_price, fill = GEO) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot median diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, median_price), y = median_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "darkgreen") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Median Diesel Price by Canadian City",
x = "City",
y = "Median Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
ggplot(geo_stats, aesx = reorder(GEO, mean_price), y = mean_price, fill = GEO) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
ggplot(geo_stats, aes(x = reorder(GEO, mean_price), y = mean_price, fill = GEO)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot median diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, median_price), y = median_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "pink") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Median Diesel Price by Canadian City",
x = "City",
y = "Median Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
ggplot(geo_stats, aes(x = reorder(GEO, mean_price), y = mean_price, fill = GEO)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot standard deviation of diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, sd_price), y = sd_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Standard Deviation of Diesel Price by Canadian City",
x = "City",
y = "Standard Deviation of Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot median diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, median_price), y = median_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "pink") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Median Diesel Price by Canadian City",
x = "City",
y = "Median Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
ggplot(geo_stats_long, aes(x = GEO, y = Price, color = Statistic, group = Statistic)) +
geom_line(size = 1) +
geom_point(size = 3) +
coord_flip() +  # Flip for better readability
labs(title = "Comparison of Mean and Median Diesel Prices by Canadian City",
x = "City",
y = "Diesel Price") +
theme_minimal()
ggplot(geo_stats_long, aes(x = GEO, y = Price, color = Statistic, group = Statistic)) +
geom_line(size = 1) +
geom_point(size = 3) +
coord_flip() +  # Flip for better readability
labs(title = "Comparison of Mean and Median Diesel Prices by Canadian City",
x = "City",
y = "Diesel Price") +
theme_minimal()
ggplot(geo_stats, aes(x = GEO, y = Price, color = Statistic, group = Statistic)) +
geom_line(size = 1) +
geom_point(size = 3) +
coord_flip() +  # Flip for better readability
labs(title = "Comparison of Mean and Median Diesel Prices by Canadian City",
x = "City",
y = "Diesel Price") +
theme_minimal()
rlang::last_trace()
# Reshape data for plotting (long format)
geo_stats_long <- geo_stats %>%
pivot_longer(cols = c(mean_price, median_price),
names_to = "Statistic",
values_to = "Price")
# Plot standard deviation of diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, sd_price), y = sd_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Standard Deviation of Diesel Price by Canadian City",
x = "City",
y = "Standard Deviation of Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot line graph comparing Mean and Median Diesel Prices for each GEO
ggplot(geo_stats_long, aes(x = GEO, y = Price, color = Statistic, group = Statistic)) +
geom_line(size = 1) +
geom_point(size = 3) +
coord_flip() +  # Flip for better readability
labs(title = "Comparison of Mean and Median Diesel Prices by Canadian City",
x = "City",
y = "Diesel Price") +
theme_minimal()
ggplot(geo_stats, aes(x = reorder(GEO, mean_price), y = mean_price, fill = GEO)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
file_path <- "C:\Users\fengm\Downloads\cleaned Diesel fuel at self service filling stations.xlsx"
file_path <- "C:\\Users\\fengm\\Downloads\\cleaned Diesel fuel at self service filling stations.xlsx"
#rename the file name as "fuel"
fuel <- read_excel(file_path, sheet = "All countries diesel price")
#rename the file name as "fuel"
fuel <- read_excel(file_path)
fuel
# To read the list of Canadian cities to categorize
canadian_cities <- c(
"St. John's, Newfoundland and Labrador",
"Charlottetown and Summerside, Prince Edward Island",
"Halifax, Nova Scotia",
"Saint John, New Brunswick",
"Québec, Quebec",
"Montréal, Quebec",
"Ottawa-Gatineau, Ontario part, Ontario/Quebec",
"Toronto, Ontario",
"Winnipeg, Manitoba",
"Regina, Saskatchewan",
"Saskatoon, Saskatchewan",
"Edmonton, Alberta",
"Calgary, Alberta",
"Vancouver, British Columbia",
"Victoria, British Columbia",
"Whitehorse, Yukon",
"Yellowknife, Northwest Territories"
)
# Filter the dataset to include only the specified Canadian cities
fuel_canada <- fuel %>% filter(GEO %in% canadian_cities)
# Group by GEO and compute mean,median & sd
geo_stats <- fuel_canada %>%
group_by(GEO) %>%
summarise(
mean_price = mean(VALUE, na.rm = TRUE),
median_price = median(VALUE, na.rm = TRUE),
sd_price = sd(VALUE, na.rm = TRUE)
)
print(geo_stats)
ggplot(geo_stats, aes(x = reorder(GEO, mean_price), y = mean_price, fill = GEO)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot median diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, median_price), y = median_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "pink") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Median Diesel Price by Canadian City",
x = "City",
y = "Median Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot standard deviation of diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, sd_price), y = sd_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "blue") +
coord_flip() +  # Flip the bar chart for better readability
labs(title = "Standard Deviation of Diesel Price by Canadian City",
x = "City",
y = "Standard Deviation of Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Reshape data for plotting (long format)
geo_stats_long <- geo_stats %>%
pivot_longer(cols = c(mean_price, median_price),
names_to = "Statistic",
values_to = "Price")
# Plot line graph for Mean Diesel Prices for each GEO
ggplot(geo_stats, aes(x = GEO, y = mean_price, group = 1)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
coord_flip() +  # Flip for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal()
# Plot line graph for Mean Diesel Prices for each GEO
ggplot(geo_stats, aes(x = GEO, y = mean_price, group = 1)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal()
# Plot standard deviation of diesel price for each Canadian city
ggplot(geo_stats, aes(x = reorder(GEO, sd_price), y = sd_price, fill = GEO)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Standard Deviation of Diesel Price by Canadian City",
x = "City",
y = "Standard Deviation of Diesel Price") +
theme_minimal() +
theme(legend.position = "none")  # Remove legend for cleaner visualization
# Plot line graph for Mean Diesel Prices for each GEO
ggplot(geo_stats, aes(x = GEO, y = mean_price, group = 1)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
coord_flip() +  # Flip for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal()
# Plot line graph for Mean Diesel Prices for each GEO
ggplot(geo_stats, aes(x = GEO, y = mean_price, group = 1)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal()
# Plot line graph for Mean Diesel Prices for each GEO
ggplot(geo_stats, aes(x = GEO, y = mean_price, group = 1)) +
geom_line(color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
coord_flip() +  # Flip for better readability
labs(title = "Mean Diesel Price by Canadian City",
x = "City",
y = "Mean Diesel Price") +
theme_minimal()
